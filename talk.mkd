name: inverse
layout: true
class: center, middle, inverse
---
#PCMSolver Workshop 2016

.author[Roberto Di Remigio]

.date[18 July 2016, Pisa]

.footnote[Slides available on [GitHub](https://github.com/robertodr/talk-pcmsolver-workshop2016), [CC BY 4.0](https://creativecommons.org/licenses/by/4.0/) licensed]

---
layout: false

.left-column[
  ## Outline
]
.right-column[

- State of affairs

- Science with PCMSolver

- Road ahead

]

---

## State of affairs

- API
  * Rewritten from scratch in pure C
  * Fortran bindings built on-demand

- Build system
  * Switched to [Autocmake](http://autocmake.readthedocs.io/en/latest/)
  * Both static and shared libraries now available

- Testing
  * Use [Catch](https://github.com/philsquared/Catch) C++ framework
  * The `master` branch has 51 tests
  * Continuous integration (CI) on Travis and Magnum
  * Daily testing on stallo. Results on [testboard.org](https://testboard.org/cdash/index.php?project=PCMSolver)
    **Courtesy: Radovan Bast**

---

## State of affairs, contd.

- Standalone executable
  * Mainly for testing purposes
  * API testing also independent of QM program

- Release process
  * Public repo on GitHub
  * Private repo on GitLab
  * Precompiled library served on [Anaconda cloud](https://anaconda.org/psi4/pcmsolver)
    **Courtesy: Lori A. Burns**

- Documentation
  * Served _via_ Read the Docs: [http://pcmsolver.readthedocs.io/en/latest/](http://pcmsolver.readthedocs.io/en/latest/)
  * Versioned documentation

---

## Interfaces to QM programs

- DALTON (w/ A. H. Steindal, K. Ruud, M. Ringholm _et al._)
  * HF and DFT up to linear electric response properties
  * Interfaced also to open-ended response code (only electric)
  * Status: **unreleased**

- LSDALTON (w/ S. S. Reine)
  * HF and DFT up to linear electric response properties
  * Status: **released**

- Psi4 (w/ T. Daniel Crawford, A. Simmonett, L. A. Burns)
  * HF and DFT
  * Status: **released**

---

## Interfaces to QM programs, contd.

- ReSpect (w/ M. Repisky, S. Komorowsky, K. Ruud, S. Pipolo)
  * 4-component, Kramers restricted and unrestricted HF and DFT
  * Real-time propagation _in progress_
  * Status: **unreleased**

- KOALA (w/ S. HÃ¶fener)
  * Subsystem DFT up to linear electric response properties
  * Status: **unreleased**

- DIRAC (w/ T. Saue)
  * 4-component, Kramers restricted, HF and DFT up to linear static electric response properties
  * Status: **released**

---

## Science with PCMSolver

- VPCM for coupled cluster (w/ T. Daniel Crawford)

- Pertubative corrections to PCM-CC (w/ T. Daniel Crawford)

- Cavities (w/ C. S. Pomelli, M. Bugeanu)

- Nonelectrostatics (w/ L. Frediani, A. H. Steindal)

- Multidomain (w/ L. Frediani, A. H. Steindal, S. Corni)

---

## Road ahead

- Curb external dependencies or use lighter ones!
  * Remove GetKw
  * Remove Boost

- Use YAML for input
  * Standard data description format
  * Human- _and_ machine-readable

- Use Python for testing
  * Unit testing in C++ cumbersome

- Re-think and re-implement Green's function engine
  * Relies heavily on templates
  * Metaprogramming to have full control at runtime
  * Hard to understand
  * Compiler errors are **not** human-readable
  * Needs Boost

---

## Road ahead, contd.

- Autogeneration of API Fortran bindings
  * Ease distribution and use of precompiled library

- Autogeneration of (most) documentation
  * Especially true for documentation of input

- Move to a fork/pull request model
  * Community effort
  * More in line with open source licensing

---
name: last-page
template: inverse

## Thanks for your attention!

Slideshow created using [remark] and served using [cicero]

[remark]: https://github.com/gnab/remark
[cicero]: https://github.com/bast/cicero
